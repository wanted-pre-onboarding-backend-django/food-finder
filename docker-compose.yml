version: '3.8'

services:
  # Django 애플리케이션
  app:
    container_name: app
    image: food-finder-v1
    env_file:
      - .env
    working_dir: /app/src
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DEV=true
    command: >
      bash -c "pipenv run python manage.py migrate && pipenv run gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./static:/app/src/staticfiles/
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - webnet
    restart: unless-stopped

  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:13-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - webnet
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"

  # Redis
  redis:
    image: redis:7
    networks:
      - webnet
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
# TODO: Celery 구현 시 주석 삭제
#  # Celery Worker
#  celery_worker:
#    image: food-finder-v1
#    command: celery -A config worker --loglevel=info
#    volumes:
#      - static_volume:/app/src/staticfiles
#    env_file:
#      - .env
#    depends_on:
#      - redis
#      - db
#    networks:
#      - webnet
#
#  # Celery Beat
#  celery_beat:
#    image: food-finder-v1
#    command: celery -A config beat --loglevel=info
#    volumes:
#      - static_volume:/app/src/staticfiles
#    env_file:
#      - .env
#    depends_on:
#      - redis
#      - db
#    networks:
#      - webnet
  # Nginx 웹 서버
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/src/staticfiles
    depends_on:
      - app
    networks:
      - webnet

volumes:
  pgdata:
  static_volume:

networks:
  webnet:
    driver: bridge
